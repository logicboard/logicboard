import { LanguageName } from "@uiw/codemirror-extensions-langs"

export type SupportedLanguage = {
    name: string, 
    version: string,
    code: string, 
    codemirror_code: LanguageName, 
    repl: boolean, 
    example: string,
    main_file: string,
    message: string,
}

export const defaultLanguage: SupportedLanguage =  {
    name: "Python 3",
    version: "3.9.0",
    code: "python_3",
    codemirror_code: "python",
    repl: true,
    example: "# Get input from console\r\nnterms = int(input(\"Enter a positive integer: \"))\r\n\r\nn1, n2 = 0, 1\r\ncount = 0\r\n\r\nif nterms <= 0:\r\n  print(\"Please enter a value\")\r\nelif nterms == 1:\r\n  print(\"Fibonacci sequence up to\", nterms, \":\")\r\n  print(n1)\r\nelse:\r\n  print(\"Fibonacci sequence:\")\r\n  while count < nterms:\r\n    print(n1)\r\n    nth = n1 + n2\r\n    # Update values\r\n    n1 = n2; n2 = nth; count += 1\r\n",
    main_file: "main.py",
    message: "Python Version 3.11.0\n\rClick the run button to execute, or type REPL() to enter Python shell\r\n \r\n",
}

export const languages: Array<SupportedLanguage> = [
    defaultLanguage,
    {
        name: "Python 2",
        version: "2.7.17",
        code: "python_2",
        codemirror_code: "python",
        repl: true,
        example: "def hello_world(n):\n  for i in xrange(n):\n    print(\"Hello, World! - {:d}\".format(i+1))\n\nhello_world(3)",
        main_file: "main.py",
        message: "Python Version 2.7.17\n\rClick the run button to execute, or type REPL() to start shell\r\n \r\n",
    },
    {
        name: "Ruby",
        code: "ruby",
        version: "3.2.2",
        codemirror_code: "ruby",
        repl: true,
        example: "def say_hello(n)\n  n.times { |i| puts \"Hello, World! - \#{i+1}\" }\nend\n\nsay_hello(3)",
        main_file: "main.rb",
        message: "Ruby Version 3.2.2\n\rClick the run button to execute, or type REPL() to start shell\r\n \r\n",
    },
    {
        name: "Rust",
        code: "rust",
        version: "1.70.0",
        codemirror_code: "rust",
        repl: false,
        example: "fn hello_world(n: i16) {\n  for i in 0..n {\n    println!(\"Hello, World! - {}\", i+1);\n  }\n}\n\nfn main() {\n  hello_world(3)\n}",
        main_file: "main.rs",
        message: "Rust version 1.70.0. Click run button to execute\r\n \r\n",
    },
    {
        name: "Elixir",
        code: "elixir",
        version: "1.15.0",
        codemirror_code: "shell",
        repl: true,
        example: "defmodule Example do\n\n   def hello_world(n, acc) when acc <= n do\n     IO.puts \"Hello, World! - \#{acc}\"\n     hello_world(n, acc + 1)\n   end\n\n   def hello_world(_, _) do\n   end\n   \n   def hello_world(n) do\n   \t hello_world(n, 1)\n   end\n\nend\n\nExample.hello_world(3)",
        main_file: "main.ex",
        message: "Elixir Version 1.15.0\n\rClick the run button to execute, or type REPL() to start shell\r\n \r\n",
    },
    {
        name: "JavaScript",
        code: "javascript",
        version: "20.3.1",
        codemirror_code: "javascript",
        repl: true,
        example: "const _ = require('lodash');\n\nfunction helloWorld(i) {\n  console.log('Hello, World! -', i);\n}\n\n_.times(3, (i) => helloWorld(i+1));",
        main_file: "main.js",
        message: "JavaScript Version 20.3.1\n\rClick the run button to execute, or type REPL() to start shell\r\n \r\n",
    },
    {
        name: "TypeScript",
        code: "typescript",
        version: "5.1.5",
        codemirror_code: "typescript",
        repl: true,
        example:  "const _ = require('lodash');\n\nclass Example {  \n  hello_world(n: number) {\n    _.times(n, (i: number) => console.log(\"Hello, World!\", i+1));\n  }\n}\n\nlet example = new Example();\nexample.hello_world(3);",
        main_file: "main.ts",
        message: "TypeScript Version 5.1.5\n\rClick the run button to execute, or type REPL() to start shell\r\n \r\n",
    },
    {
        name: "PHP",
        code: "php",
        version: "8.2.7",
        codemirror_code: "php",
        repl: true,
        example:  "<?php\n\n  function helloWorld($n) {\n   \tfor ( $i = 1; $i <= $n; $i++) {\n      echo sprintf(\"Hello, World! - %d\\n\", $i);\n    }\n  }\n\n  helloWorld(3);\n\n?>",
        main_file: "main.php",
        message: "PHP Version 8.2.7\n\rClick the run button to execute, or type REPL() to start shell\r\n \r\n",
    },
    {
        name: "Swift",
        code: "swift",
        version: "5.8.1",
        codemirror_code: "swift",
        repl: true,
        example:   "import Foundation\n\nclass Exmaple {\n  func helloWorld(n: Int) {\n    for i in 1...n {\n      print(\"Hello, World! - \\(i)\")\n    } \n  }\n}\n\nlet example = Exmaple()\nexample.helloWorld(n: 3)",
        main_file: "main.swift",
        message: "Swift version 5.8.1. Click run button to execute\r\n \r\n",
    },
    {
        name: "Bash",
        code: "bash",
        version: "5.1",
        codemirror_code: "shell",
        repl: true,
        example:   "hello_world () {\n  for i in `seq 1 $1`;\n  do\n  \techo \"Hello, World! - \"$i\n  done\n}\n\nhello_world 3",
        main_file: "main.sh",
        message: "Bash Version 5.1\n\rClick the run button to execute, or type REPL() to start shell\r\n \r\n",
    }
]
  